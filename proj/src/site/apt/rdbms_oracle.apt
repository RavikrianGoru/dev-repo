 -----
 The APT format: 
 -----
 The Maven Team:
 -----
 -----

RDBMS-ORACLE file
~~~~~~~~~
 

 
 
+--------------------------+

http://artoftesting.com/interviewSection/sql-interview-questions.html
http://artoftesting.com/interviewSection/sql-queries-for-interview.html


> set linesize 300;
> set pagesize 100;

Create table which holds duplicate records:
-------------------------------------------
create table d_emp
(
	empno number(4) not null,
    ename varchar2(12),
    mgr number(4)
);

create table d_proj
(
	empno number(4) not null,
    proj varchar2(12),
    sal number(7,2)
);


Insert records in tables:
-------------------------
insert into d_emp values(1001,'ravi',1007);
insert into d_emp values(1001,'ravi',1007);
insert into d_emp values(1002,'kiran',1001);
insert into d_emp values(1003,'goru',1001);
insert into d_emp values(1004,'kumar',1002);
insert into d_emp values(1005,'kumar',1003);
insert into d_emp values(1006,'kumar',1004);
insert into d_emp(empno,ename) values(1007,'raj');

insert into d_proj values(1001,'p1',25000.00);
insert into d_proj values(1002,'p2',30000.00);
insert into d_proj values(1003,'p4',35000.00);
insert into d_proj values(1004,'p3',40000.00);
insert into d_proj values(1005,'p4',20000.00);
insert into d_proj values(1006,'p3',31000.00);
insert into d_proj(empno,proj) values(1007,'p5');
insert into d_proj values(1008,'p1',25000.00);

SQL> select * from d_emp;
SQL> select * from d_proj;



d_emp
-----------------------------------------------------
empno			ename				mgr
-----------------------------------------------------
1001			ravi				1007
1001			ravi				1007
1002			kiran				1001
1003			goru				1001
1004			kumar				1002
1005			kumar				1003
1006			kumar				1004
1007			raj					NULL			
-----------------------------------------------------

d_proj
-----------------------------------------------------
empno			proj				sal
-----------------------------------------------------
1001			p1					25000.00
1002			p2					30000.00
1003			p4					35000.00
1004			p3					40000.00
1005			p4					20000.00
1006			p3					31000.00
1007			p5					NULL
1008			p1					25000.00





1. Fetch the count of employees working in project 'p1'.
	select count(*) from d_proj where proj='p1'
2) Fetch emono who works in multiple projects.
    select empno from d_proj group by empno having count(*)>1;
3) Fetch empno, ename whose sal is 30000 to 40000
    select distinct empno, ename from d_emp where empno in (select empno from d_proj where sal>=30000 and sal<=40000);
4) Fetch proj and emp count project wise in descending order.
	select proj,count(empno) empCountInProj from d_proj group by proj order by empCountInProj desc;
*)
5) Fetch emp name and his managers names. if emp is not has mgr show blank.
	select distinct e1.ename ,e2.ename MgrName from d_emp e1 left join d_emp e2 on e1.mgr=e2.empno;
*)
6) Fetch emp name, sal info even if emp is not having sal.
	select distinct e1.ename , e2.sal from d_emp e1 left join d_proj e2 on e1.empno=e2.empno;
*)	
7) Fetch all emp names who are also managers.
	select distinct e1.empno, e1.ename from d_emp e1 inner join d_emp e2 on e1.empno=e2.mgr;
		or
	select distinct e1.empno, e1.ename from d_emp e1, d_emp e2 where e1.empno=e2.mgr;
*)
8) Fetch duplicate record from table;
	select * from d_emp group by (empno,ename,mgr) having count(*) >1;
*)
9) Remove duplicate records without using temporary table.
	 
	 delete from d_emp where rowid not in (select max(rowid) from d_emp group by empno,ename,mgr);
	 
	 select rowid from d_emp where rowid not in (select max(rowid) from d_emp group by empno,ename,mgr);
*)
10) Fetch top n records based on sal of employee.(sal may be null for some employees)(records may be duplicate).
	
	select * from 
		(select * from d_proj where sal is not null group by (empno,proj,sal) order by sal desc)
	where rownum<=3;

10) mySQL Query:
		SELECT * FROM EmployeeSalary ORDER BY Salary DESC LIMIT N

10) sql query
		SELECT TOP N * FROM EmployeeSalary ORDER BY Salary DESC
		
*)
11) Fetch top nth records based on sal of employee.(sal may be null for some employees)(records may be duplicate).

	select * from 
		(select * from 
				(select * from 
						(select * from d_proj where sal is not null group by (empno,proj,sal) order by sal desc)
				where rownum<=3) 
		order by sal)
	where rownum<=1;
	
11) mySQl query
		SELECT Salary FROM Employee ORDER BY Salary DESC LIMIT N-1,1;

*)
11) Write SQL query to find the 3rd highest salary from table without using TOP/limit keyword.
	Ans. The below SQL query make use of correlated subquery wherein in order to find the 3rd highest salary the inner query will return the count of till 
	we find that there are two rows that salary greater than other distinct salaries.		
	
	select sal from d_proj e1 
		where 2 =( select count(distinct e2.sal) from d_proj e2 where e2.sal >e1.sal);

	Note: Nth highest n-1 =(....)

10) Oracle tables in different schemas
	By default, only the person who create a table may access it.  To access tables within separate schemas, you must grant access
	
	connect tom/thumb;
	grant select on emp to harry;

	connect dick/nixon;
	grant select to emp to harry;

	connect harry/potter;

	select * from emp
	union
	select * from tom.emp
	union
	select * from dick.emp;

This for distributed tables (using a db link):

CREATE DATABASE LINK new_york
CONNECT TO tom IDENTIFIED BY thumb
USING 'NEWYORK.world';  -- entry from tnsnames.ora

select * from emp@new_york
union
select * from dick.emp;

	
	
12) Fetch only odd rown from table.
	
	select E.empno, E.ename, E.mgr from (select Row_number() over(order by empno) as Rownumber, empno,ename,mgr from d_emp) E where MOD(E.Rownumber,2) =0;
		or
	select e1.empno, e1.ename ,e1.mgr from ( select rownum as RowNumber from d_emp order by empno) e1 where mod(RowNumber,2) =0;
	
12) Fetch only even rown from table.
	
	select E.empno, E.ename, E.mgr from (select Row_number() over(order by empno) as Rownumber, empno,ename,mgr from d_emp) E where MOD(E.Rownumber,2) =1;
		or
	select e1.empno, e1.ename ,e1.mgr from ( select rownum as RowNumber from d_emp order by empno) e1 where mod(RowNumber,2) =1;

13) Copy entire table and data from one table to another.
	select * info newTale from oldTable;-----(not working in oracle)

13) Copy only structure f table from one to another.
	select * info newTale from oldTable where 1=0;-----(not working in oracle)

14) Fetch common records between two tables.
		(select * from table1) intersect (select * from table2);
15) Fetch records that are present in one table but not in another table.
		(select * from table1) minus (select * from table2);


*) An attribute which is not a part of GROUP BY clause can’t be used for selection. 
   Any attribute which is part of GROUP BY CLAUSE can be used for selection but it is not mandatory.
   Error Query:	SELECT ROLL_NO, ADDRESS, SUM(AGE) FROM STUDENT GROUP BY (ADDRESS);
   	
   	
+--------------------------+

Concepts:
--------

1) The different type of SQL commands are- SQL stands for Structured Query Language,  it is an language used for creating, storing, fetching and updating of data and database objects in RDBMS.

DDL - Data Definition Language
DML - Data Manipulation Language
DCL - Data Control Language
TCL - Transactional Control Language


2)
DDL- it is used to define or alter the structure of the database.
	CREATE
	DROP
	ALTER
	TRUNCATE 
	RENAME 
DML refers to Data Manipulation Language, it is used for managing data present in the database.
	select
	insert
	update
	delete 
DCL refers to Data Control Language, these commands are used to create roles, grant permission and control access to the database objects.
	GRANT 
	REVOKE 
	Deny 
TCL refers to Transaction Control Language, it is used to manage the changes made by DML statements.
	COMMIT 
	SAVEPOINT 
	ROLLBACK 

3)
SQL constraints are the set of rules that impose some restriction while insertion, deletion or update of data in the databases.
column level  and table level constraints
	Primary Key	- Not Null : a column or a combination of columns which uniquely identifies a record in the database. : only one primary key in a table.
	Foreign Key - used for enforcing referential integrity in which a field marked as foreign key in one table is linked with primary key of another table.
	Unique Key	-only unique value(no duplication)., allows onle NULL
	Not NULL	- used for ensuring that the value in the field cannot be NULL.
	DEFAULT - used for providing a default value to a column when no value is supplied at the time of insertion of record in the database.
	CHECK - used for enforcing referential integrity in which a field marked as foreign key in one table is linked with primary key of another table. Salary INT CHECK (Salary > 1000)
	Index

4) difference between unique key and primary key?

	A unique key allows null value(although only one)
	A table can have more than one unique keys column
	A unique key column creates non-clustered index

	A primary key doesn't allow null values.
	A table can have only one primary key
	Primary key creates a clustered index on the column

5) what clustered and non-clustered indexes?
	Clustered indexes physically sort the rows in the table based on the clustering key(by default primary key). 
	Clustered index helps in fast retrieval of data from the databases.
	There can be only one clustered index in a table.
	
	Non clustered indexes have a jump table containing key-values pointing to row in the table corresponding to the keys.
	There can be multiple clustered indexes in a table.
	

6) 
What is a composite key?
Ans. A composite key is a primary key with multiple columns as in case of some tables a single field might not guarantee unique and not null values, so a combination of multiple fields is taken as primary key.


7) difference between delete, truncate and drop command?

	DELETE- DML, remove rows from table based on where clause, Rollback possible.
	
	DROP- DDL, remove all records and table structor
	
	TRUNCATE- DDL, removes all records , table structure and storage spece. It takes lock on the table while delete command takes lock on rows of table.


8) Types of joins in SQL
	Joins are used to combine records from multiple tables.
	
	Inner Join - fetche data from two tables having matching data in the specified columns of both the tables.
				 SELECT * FROM TABLE1 INNER JOIN TABLE2 ON TABLE1.columnA = TABLE2.columnA;
				 
	Left Join - To fetch all rows from left table and matching rows of the right table
				 SELECT * FROM TABLE1 LEFT JOIN TABLE2 ON TABLE1.columnA = TABLE2.columnA;
	
	Right Join - To fetch all rows from right table and matching rows of the left table
				 SELECT * FROM TABLE1 RIGHT JOIN TABLE2 ON TABLE1.columnA = TABLE2.columnA;
	
	Full Outer Join - To fetch all rows of left table and all rows of right table
				 SELECT * FROM TABLE1 FULL OUTER JOIN TABLE2 ON TABLE1.columnA = TABLE2.columnA;
	
	Self Join - Joining a table to itself, for referencing its own data
				 SELECT * FROM TABLE1 T1, TABLE1 T2 WHERE T1.columnA = T2.columnB;


	
9) Difference between cross join and full outer join?
	
	A cross join returns cartesian product of the two tables, so there is no condition or on clause as each row of tabelA is joined with each row of tableB
	
	A full outer join will join the two tables on the basis of condition specified in the on clause and for the records not satisfying the condition null value is placed in the join result.
	

10) Difference between having and where clause?
	A 'where' clause is used to fetch data from database that specifies a particular criteria (specified after the where clause). 
			Select Employee from Emp_Project wh2ere Project = P2;
	
	A 'having' clause is used along with 'GROUPBY' to fetch data that meets a particular criteria specified by the aggregate function.
			Select Employee from Emp_Project GROUPBY Employee having count(Project)>1;


11) difference between Union and Union All command?
	
	Union is by default distinct i.e. it combines the distinct result set of two or more select statements.
		
	Union All combines all the rows including duplicates in the result set of different select statements.


* Select into statement is used to directly select data from one table and insert into other, the new table gets created with same name and type as of the old table
		SELECT * INTO newtable FROM oldTable;
	
12) What is a View in SQL?
	A view is virtual table, it is a named set of SQL statements which can be later referenced and used as a table.
	
	CREATE VIEW VIEW_NAME AS
	SELECT COLUMN1, COLUMN2
	FROM  TABLE_NAME WHERE CONDITION;

13) Can we use 'where' clause with 'GROUPBY'?
	Yes, we can use 'where' clause with 'GROUPBY'. The rows that doesn't meet the where conditions are removed first and then the grouping is done based on the GROUPBY column.
	
	SELECT Employee, Count(Project )
	FROM Emp_Project
	WHERE Employee != 'A'
	GROUP BY Project;


prime attribute- part of one of the candidate keys
Non-prime attribute - 

14) Database Normalisation?
	Database normalisation is the process of organization of data in order to reduce the redundancy and anomalies in the database.
		
		First Normal Form  - a column cannot have multiple values, each value in the columns must be atomic.
	
		Second Normal Form - it must follow 1NF and no column should be dependent on the primary key.
		
		Third Normal Form - it must follow 2NF and each non-prime attribute must be dependent on primary key of the table.
		
		BCNF - BCNF is the advanced or stricter version of 3NF. For each functional dependency X -> Y- X should be the super key


15) transactions in SQL?
	Transaction is a set of operations performed in a logical sequence.
	It is executed as a whole, if any statement in the transaction fails, the whole transaction is marked as failed and not committed to the database.
	
16) ACID properties?
	
	Atomicity - All the operations in the transaction are performed as a whole or not performed at all.
	Consistency - State of database changes only on successful committed transaction.
	Isolation - Even with concurrent execution of the multiple transactions, the final state of the DB would be same as if transactions got executed sequentially.
	Durability - Even in the state of crash or power loss the state of committed transaction remain persistent.

17) What are locks in SQL?
	Locks in SQL are used for maintaining database integrity in case of concurrent execution of same piece of data
	
	1) Shared locks- 		Allows data to be read-only(Select operations), prevents the data to be updated when in shared lock.
	2) Update locks - Applied to resources that can be updated. There can be only one update lock on a data at a time.
	3) Exclusive locks - Used to lock data being modified(INSERT, UPDATE, or DELETE) by one transaction thus 
						 ensuring that multiple updates cannot be made to the same resource at the same time.
	4) Intent locks - A notification mechanism using which a transaction conveys that intends to acquire lock on data.
	5) Schema locks- Used for operations when schema or structure of the database is required to be updated.
	6) Bulk Update locks - Used in case of bulk operations when the TABLOCK hint is used.

18) aggregate functions in SQL?
	multiple inputs and single output
	Aggregate functions are the SQL functions which return a single value calculated from multiple values of columns.
		Count()
		Max()
		Min()
		Avg()
		Sum()
19) scalar functions in SQL?
	single inputs and single output
	Scalar functions are the functions that return a single value by processing a single value in SQL.
		UCASE()
		LCASE()
		ROUND()
		NOW()
		LEN()
		SUBSTRING() or MID()
		LOCATE() 
		LTRIM()
		RTRIM() 


20)  coalesce function?
	Coalesce function is used to return the first not NULL value out of the multiple values or expressions passed to the coalesce function as parameters.
			COALESCE(NULL, NULL, 5, 'ArtOfTesting') will return the value 5.
			COALESCE(NULL, NULL, NULL) will return NULL value as no not NULL value is encountered in the parameters list.

21) cursors in SQL?
	Cursors are objects in SQL that are used to traverse the result set of a SQL query one by one.


22) stored procedures?

	Stored procedures are SQL procedures(bunch of SQL statements) that are stored in the database and can be called by other procedures, triggers and other applications.

	+ improve performance as the procedures are pre-compiled as well as cached.
	+ It makes queries easily maintainable and reusable
	+ Reduce network usage and traffic
	+ Improve security as stored procedures restrict direct access to the database.
	
	
	--------------------------
	CREATE PROCEDURE 
	procedureName
	AS
	Begin
		Set of SQL statements
	End
	--------------------------

23) Triggers are special type of stored procedures that get executed when a specified event occurs.
	
	---------------------------------
	CREATE TRIGGER 
	triggerName 
	triggerTime{Before or After}
	triggerEvent{Insert, Update or Delete}     
	ON tableName 
	FOR EACH ROW     
	triggerBody
	---------------------------------
	
24) orphan records?
	Orphan records are the records having foreign key to a parent record which doesn't exist or got deleted.
	
25) How can we remove orphan records from a table?
	In order to remove orphan records from database we need to create a join on the parent and child tables and then remove the rows from child table where id IS NULL.
	
	-----------------------
	DELETE PT 
	FROM ParentTable PT
	LEFT JOIN ChildTable CT 
	ON PT.ID = CT.ID 
	WHERE PT.ID IS NULL
	-----------------------
	*Remember: Delete with joins requires name/alias before from clause in order to specify the table of which data is to be deleted.


