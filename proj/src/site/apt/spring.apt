Spring:

1) What are the types of Dependency Injection Spring supports?

2) Types of IOC container in spring
    BeanFactory
    ApplicationContext


3) Bean lifecycle in Spring framework
	Instantiate: First the spring container finds the bean’s definition from the XML file and instantiates the bean.
	Populate properties: Using the dependency injection, spring populates all of the properties as specified in the bean definition.
	Set Bean Name: If the bean implements BeanNameAware interface, spring passes the bean’s id to setBeanName() method.
	Set Bean factory: If Bean implements BeanFactoryAware interface, spring passes the beanfactory to setBeanFactory() method.
	Pre Initialization: Also called post process of bean. If there are any bean BeanPostProcessors associated with the bean, Spring calls postProcesserBeforeInitialization() method.
	Initialize beans: If the bean implements IntializingBean,its afterPropertySet() method is called. If the bean has init method declaration, the specified initialization method is called.
	Post Initialization: – If there are any BeanPostProcessors associated with the bean, their postProcessAfterInitialization() methods will be called.
	Ready to use: Now the bean is ready to use by the application
	Destroy: If the bean implements DisposableBean , it will call the destroy() method


4) What is Spring IOC container

5) What bean scopes does Spring support
	Singleton: This scopes the bean definition to a single instance per Spring IoC container.
	Prototype: This scopes a single bean definition to have any number of object instances.
	Request: This scopes a bean definition to an HTTP request. Only valid in the context of a web-aware Spring ApplicationContext
	Session: This scopes a bean definition to an HTTP session. Only valid in the context of a web-aware Spring ApplicationContext.
	Global-session: This scopes a bean definition to a global HTTP session. Only valid in the context of a web-aware Spring ApplicationContext.

5a) In which scenario, you will use singleton and prototype scope

6) Difference between BeanFactory and ApplicationContext(BeanFactory + spring AOP, message resource handling for i18n etc.)?
7) What is autowiring in spring? What are the autowiring modes(no,byName,byType,constructor)?

7) which ViewResolver class widely used ?
org.springframework.web.servlet.view.InternalResourceViewResolver class is widely used

8) What does @Controller annotation,@RequestMapping  
